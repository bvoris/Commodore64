
The Commodore 64 has its own OS and programming language interpreter.
The BASIC v2.0 (Beginner's All-purpose Symbolic Instruction Code Version 2) starts at the begining of the load screen.
The following the commands associated with BASIC.

ABS - evaluates to the absolute value (value without the sign) of the given numeric term. 
  Example:    PRINT ABS(-10) (Screen: 10)

AND - performs two functions in boolean expressions AND yeilds  the boolean value TRUE; in bitwise operations a bit in the resulting integer is set if and only if the corresponding bits from both integer ters are set. 
  Example 1:  PRINT 3>2 AND 5<6
              -1      meaning "true"
              
  Example 2:  POKE 53265,PEEK (53265) AND 247    Bitwise operation to turn off a single bit in a register
                                   
ASC - keyword takes the first char of a string and maps it to the numeric index of the Commodore ASCII-table.
  Example:  PRINT ASC("A")
            65
            
ATN - is a mathematical function that returns the arc tangent of a numeric value (the inverse function of TAN). 
  Example:  PRINT ATN(1)
            Output: 0.785398163
          
CHR$ - can be used to convert a number between 0 and 255 into an ASCII character (of string type) and is the inverse function of ASC
  Example:  10 PRINT CHR$(147): REM clear the screen
            20 A$="First name"+CHR$(13)+"Surname": REM adding the <RETURN>-key into the string A$.
            30 PRINT A$: REM output A$
            
CLOSE -  is used for closing currently opened files or drive numbers, so that the data can be written from a write buffer to the actual device like tape or disk. 
  Example:  10 CLOSE Z

CLR - LR deletes all variables, arrays, data read position from DATA lines, defined functions (DEF FN), return addresses of subroutines (GOSUB) and the state of loops (FOR and NEXT) by releasing the space in BASIC RAM and on stack previously allocated for those structures. Furthermore the state of open files (OPEN) and possibly buffered data for devices like diskette or datasette of the associated files gets lost because the data is freed.
  Example:  0 POKE 56,52: CLR: REM make some free space after the BASIC program area for sprite, character or sound data
            10 A$=""         : REM the above usage of the CLR command MUST precede the first variable usage
            20 POKE 13312,8  : REM this would be dangerous if the BASIC program area was not limited in line 0 or CLR was omitted - program code could be overwritten
            
CMD - changes the data output from the screen to another peripheral device like datasette, modem, printer or disk drive. CMD can be used directly or in programs.
  Example:  OPEN 1,4,7: CMD 4, "Test on printer capital/small letters in  program listing X": PRINT: LIST 
            PRINT#1: CLOSE 1: REM finishing the redirection of the data output
            
CONST - used to resume execution of a BASIC program, which either ended in with an END or a STOP command, or was halted by pressing the RUN/STOP .
  Example 1:  10 PRINT "PART 1"
              20 END : PRINT "AFTER 'END'"
              30 PRINT "PART 2"
              shows PART 1
              After giving CONT one gets
              AFTER 'END'
              PART 2
              
  Example 2: 10 PRINT "WAITING ..."
              20 CONT 
              
COS -  is a mathematical function which evaluates to the cosine for a given angle, a number considered to be in radians.
  Example:  PRINT COS(0)
            Output: 1
            ?COS(23*Ï€/180) (cos of 23 degrees)

DATA - is used to store constant information in the program code, and is used with the BASIC-command READ
  Example:  10 DATACOMMODORE 64
            11 DATA COMMODORE 64 :
            12 DATA COMMODORE 64 , COMMODORE 64
            13 DATA " COMMODORE 64 "
            20 READ A$,B$,C$,D$,E$
            25 PRINT ,,"STRING LENGTH":PRINT
            30 PRINT A$, LEN(A$)
            40 PRINT B$, LEN(B$)
            50 PRINT C$, LEN(C$)
            60 PRINT D$, LEN(D$)
            70 PRINT E$, LEN(E$)
            
            giving following output:

                    STRING LENGTH

            COMMODORE 64         12
            COMMODORE 64         13
            COMMODORE 64         13
            COMMODORE 64         12
            COMMODORE 64         14
            
DEF -  defines a function with exactly one single numeric argument which can be executed with FN afterwards.
  Example:  10 A=10: B=11
            20 DEF FN C(X)= 3+(A*B)/2
            30 D = FN C(0): PRINT D
            
DIM - allocates space in array memory for a new array, with one dimension for each of the dimension sizes d1, d2, d3, etc. given in the DIM statement.
  Example:  
  
END - 
  Example:  
  
EXP - 
  Example:  
  
FN - 
  Example:  
  
FOR - 
  Example:  
  
FRE - 
  Example:  
  
GET - 
  Example:  
  
GET# -
  Example:  
  
GOSUB - 
  Example:  
  
GOTO - 
  Example:  
  
IF - 
  Example:  
  
INPUT - anything requiring user input. Example: INPUT VARIABLE$
  Example:  
  
INPUT# - 
  Example:  
  
INT - 
  Example:  
  
LEFT$ - 
  Example:  
  
LEN - 
  Example:  
  
LET - 
  Example:  
  
LIST - 
  Example:  
  
LOAD - 
  Example:  
  
LOG - 
  Example:  
  
MID$ - 
  Example:  
  
NEW - 
  Example:  
  
NEXT - 
  Example:  
  
NOT - 
  Example:  
  
ON - 
  Example:  
  
OPEN - 
  Example:  
  
OR - 
  Example:  
  
PEEK - 
  Example:  
  
POKE - 
  Example:  
  
POS - 
  Example:  
PRINT - print text to the screen
  Example:  
  
PRINT# - 
  Example:  
  
READ - 
  Example:  
  
REM - 
  Example:  
  
RESTORE - 
  Example:  
  
RETURN - 
  Example:  
  
RIGHT$ - 
  Example:  
  
RND - 
  Example:  
  
RUN - 
  Example:  
  
SAVE - 
  Example:  
  
SGN - 
  Example:  
  
SIN - 
  Example:  
  
SPC - 
  Example:  
  
SQR - 
  Example:  
  
STATUS / ST - 
  Example:  
  
STEP - 
  Example:  
  
STOP - 
  Example:  
  
STR$ - 
  Example:  
  
SYS - 
  Example:  
  
TAB - 
  Example:  
  
TAN - 
  Example:  
  
THEN - 
  Example:  
  
TIME / TI - 
  Example:  
  
TIME$ / TI$ - 
  Example:  
  
TO - 
  Example:  
  
USR - 
  Example:  
  
VAL - 
  Example:  
  
VERIFY - 
  Example:  
  
WAIT - 
  Example:  
  

CRSR
INST
DEL

LOAD
SAVE



PRINT CHR$ (147) - CLEAR SCREEN

References:
C64 WIKI - https://www.c64-wiki.com/wiki/C64-Commands
Mastering the Commodore 64 by Mark Greenshields
